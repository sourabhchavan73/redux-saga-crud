{"ast":null,"code":"import * as types from '../actions/types';\nconst initialState = {\n  users: {},\n  loading: false,\n  error: null\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LOAD_USER_START:\n    case types.CREATE_USER_START:\n    case types.DELETE_USER_START:\n    case types.UPDATE_USER_START:\n      return { ...state,\n        loading: true\n      };\n\n    case types.LOAD_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: action.payload\n      };\n\n    case types.CREATE_USER_SUCCESS:\n      return { ...state,\n        loading: false\n      };\n\n    case types.UPDATE_USER_SUCCESS:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case types.DELETE_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: state.users.filter(user => user.id !== action.payload)\n      };\n\n    case types.LOAD_USER_FAILED:\n    case types.CREATE_USER_FAILED:\n    case types.DELETE_USER_FAILED:\n    case types.UPDATE_USER_FAILED:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["F:/redux-saga/redux-saga-crud/src/redux/reducers/usersReducer.js"],"names":["types","initialState","users","loading","error","usersReducer","state","action","type","LOAD_USER_START","CREATE_USER_START","DELETE_USER_START","UPDATE_USER_START","LOAD_USER_SUCCESS","payload","CREATE_USER_SUCCESS","UPDATE_USER_SUCCESS","id","DELETE_USER_SUCCESS","filter","user","LOAD_USER_FAILED","CREATE_USER_FAILED","DELETE_USER_FAILED","UPDATE_USER_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAG;AAHS,CAArB;;AAOA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,eAAX;AACA,SAAKT,KAAK,CAACU,iBAAX;AACA,SAAKV,KAAK,CAACW,iBAAX;AACA,SAAKX,KAAK,CAACY,iBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKH,KAAK,CAACa,iBAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHD,QAAAA,KAAK,EAAEK,MAAM,CAACO;AAHX,OAAP;;AAMJ,SAAKd,KAAK,CAACe,mBAAX;AAEI,aAAO,EACH,GAAGT,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKH,KAAK,CAACgB,mBAAX;AACI,aAAO,EAAE,GAAGV,KAAL;AAAY,SAACC,MAAM,CAACO,OAAP,CAAeG,EAAhB,GAAqBV,MAAM,CAACO;AAAxC,OAAP;;AAEJ,SAAKd,KAAK,CAACkB,mBAAX;AACI,aAAM,EACF,GAAGZ,KADD;AAEFH,QAAAA,OAAO,EAAE,KAFP;AAGFD,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYiB,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYV,MAAM,CAACO,OAAhD;AAHL,OAAN;;AAMJ,SAAKd,KAAK,CAACqB,gBAAX;AACA,SAAKrB,KAAK,CAACsB,kBAAX;AACA,SAAKtB,KAAK,CAACuB,kBAAX;AACA,SAAKvB,KAAK,CAACwB,kBAAX;AACI,aAAO,EACH,GAAGlB,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEG,MAAM,CAACO;AAHX,OAAP;;AAKJ;AACI,aAAOR,KAAP;AA5CR;AA8CH,CA/CD;;AAiDA,eAAeD,YAAf","sourcesContent":["import * as types from '../actions/types';\r\n\r\nconst initialState = {\r\n    users: {},\r\n    loading: false,\r\n    error : null\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.LOAD_USER_START:\r\n        case types.CREATE_USER_START:\r\n        case types.DELETE_USER_START:\r\n        case types.UPDATE_USER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        \r\n        case types.LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload,\r\n            };\r\n            \r\n        case types.CREATE_USER_SUCCESS:\r\n       \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n            \r\n        case types.UPDATE_USER_SUCCESS:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        \r\n        case types.DELETE_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                users: state.users.filter((user) => user.id !== action.payload)\r\n            }\r\n\r\n        case types.LOAD_USER_FAILED: \r\n        case types.CREATE_USER_FAILED:\r\n        case types.DELETE_USER_FAILED:\r\n        case types.UPDATE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}